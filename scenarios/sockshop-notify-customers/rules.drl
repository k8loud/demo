import io.github.hephaestusmetrics.model.metrics.Metric;
import java.util.List
import org.apache.http.util.EntityUtils
import org.apache.http.HttpResponse
import com.google.gson.Gson
import com.google.gson.GsonBuilder;
import org.k8loud.executor.actions.cnapp.sockshop.NotifyCustomersAction
import java.util.Arrays
import java.util.stream.Collectors
import java.util.stream.Stream;

global org.k8loud.executor.model.ActionList actions;
global org.k8loud.executor.drools.UsableServices usableServices;

dialect "mvel"

declare CatalogueItem
    id: String
    name: String
    description: String
    imageUrl: String[]
    price: float
    count: int
    tag: String[]
end

rule "most-popular-this-hour"
	when
		catalogueQueries : Metric(
			queryTag == "catalogue-queries-top1-1h",
			queriedCount : value
		)
		eval(usableServices.getCronCheckerService().checkPatternForSession("0 0 * ? * * *"))
	then
		System.out.println("Processing 'most-popular-this-hour'...");

		sockShopUrl = "http://" + catalogueQueries.getLabels().get("instance");
		urlSuplement = catalogueQueries.getLabels().get("route").substring(1);

        response = usableServices.getHttpService().createSession().doGet(sockShopUrl, urlSuplement);

		itemJSON = EntityUtils.toString(response.getEntity());
		item = new GsonBuilder().create().
			fromJson(itemJSON, CatalogueItem.class);

		content = String.format("Dear customer!%n%nThis hour's most popular product has been viewed %.0f times" +
			", more details:%n%n%-14s: %s%n%-14s: %s%n%-14s: %.2f $%n%-14s: %s",
			queriedCount,
			"name", ((CatalogueItem)item).getName(),
			"description", ((CatalogueItem)item).getDescription(),
			"price", ((CatalogueItem)item).getPrice(),
			"in stock", ((CatalogueItem)item).getCount());

		// Couldn't make streams work
		imagesUrls = Arrays.asList(((CatalogueItem)item).getImageUrl());
		for (int i = 0; i < imagesUrls.size(); i++) {
			imagesUrls.set(i, sockShopUrl + imagesUrls.get(i));
		}

		actions.add(NotifyCustomersAction.builder()
			.sockShopService(usableServices.getSockShopService())
			.applicationUrl(sockShopUrl)
			.senderDisplayName("SockShop Marketing")
			.subject("Most popular product this hour")
			.content(content)
			.imagesUrls(imagesUrls)
			.build());

		System.out.println("...Processed 'most-popular-this-hour'");
end
